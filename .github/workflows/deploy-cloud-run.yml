name: Deploy Gmail Watch Renewal Functions

on:
  push:
    branches: [main]
    paths: 
      - 'watch-query-function/**'
      - 'renewal-worker-function/**'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_ACCOUNT: dev-talentino-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      project-id: ${{ steps.setup.outputs.project-id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify project setup
        id: setup
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          echo "project-id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "✅ Authenticated to project: $PROJECT_ID"
          
          # Verify source directories exist
          echo "📁 Checking source directories..."
          ls -la watch-query-function/ || echo "❌ watch-query-function/ directory not found"
          ls -la renewal-worker-function/ || echo "❌ renewal-worker-function/ directory not found"

  deploy-coordinator:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy Coordinator Function
        run: |
          echo "🚀 Deploying Gmail Watch Coordinator..."
          gcloud run deploy gmail-coordinator \
            --source=./watch-query-function \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --service-account=${{ env.SERVICE_ACCOUNT }} \
            --memory=512Mi \
            --cpu=1 \
            --timeout=300s \
            --max-instances=5 \
            --set-env-vars="PROJECT_ID=${{ env.PROJECT_ID }},RENEWAL_TOPIC=${{ secrets.GCP_PUB_SUB_GMAIL_WATCH_RENEWAL_TOPIC_ID }},DATABASE_URL=${{ secrets.DATABASE_URL }}"

      - name: Get Coordinator URL
        id: coordinator-url
        run: |
          URL=$(gcloud run services describe gmail-coordinator --region=${{ env.REGION }} --format='value(status.url)')
          echo "coordinator-url=$URL" >> $GITHUB_OUTPUT
          echo "✅ Coordinator deployed at: $URL"

  deploy-worker:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy Worker Function
        run: |
          echo "🚀 Deploying Gmail Renewal Worker..."
          gcloud run deploy gmail-worker \
            --source=./renewal-worker-function \
            --region=${{ env.REGION }} \
            --platform=managed \
            --no-allow-unauthenticated \
            --service-account=${{ env.SERVICE_ACCOUNT }} \
            --memory=512Mi \
            --cpu=1 \
            --timeout=300s \
            --max-instances=20 \
            --set-env-vars="PROJECT_ID=${{ env.PROJECT_ID }},DATABASE_URL=${{ secrets.DATABASE_URL }},GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}"

      - name: Get Worker URL
        id: worker-url
        run: |
          URL=$(gcloud run services describe gmail-worker --region=${{ env.REGION }} --format='value(status.url)')
          echo "worker-url=$URL" >> $GITHUB_OUTPUT
          echo "✅ Worker deployed at: $URL"

  setup-pubsub:
    runs-on: ubuntu-latest
    needs: [setup, deploy-worker]
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create Pub/Sub Topic
        run: |
          echo "📡 Setting up Pub/Sub infrastructure..."
          
          # Create topic if it doesn't exist
          gcloud pubsub topics create ${{ secrets.GCP_PUB_SUB_GMAIL_WATCH_RENEWAL_TOPIC_ID }} \
            --project=${{ env.PROJECT_ID }} || echo "ℹ️ Topic already exists"

      - name: Create Pub/Sub Subscription
        run: |
          # Get worker service URL
          WORKER_URL=$(gcloud run services describe gmail-worker --region=${{ env.REGION }} --format='value(status.url)')
          
          echo "🔗 Creating subscription with endpoint: $WORKER_URL"
          
          # Create subscription with retry policy
          gcloud pubsub subscriptions create gmail-renewal-subscription \
            --topic=${{ secrets.GCP_PUB_SUB_GMAIL_WATCH_RENEWAL_TOPIC_ID }} \
            --push-endpoint="$WORKER_URL" \
            --ack-deadline=600 \
            --max-delivery-attempts=5 \
            --min-retry-delay=10s \
            --max-retry-delay=300s \
            --project=${{ env.PROJECT_ID }} || echo "ℹ️ Subscription already exists"

  create-scheduler:
    runs-on: ubuntu-latest
    needs: [setup, deploy-coordinator]
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[setup-scheduler]')
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create Cloud Scheduler Job
        run: |
          echo "⏰ Creating scheduled renewal job..."
          
          # Get coordinator service URL
          COORDINATOR_URL=$(gcloud run services describe gmail-coordinator --region=${{ env.REGION }} --format='value(status.url)')
          
          # Create scheduler job (runs daily at 2 AM UTC)
          gcloud scheduler jobs create http gmail-daily-renewal \
            --location=${{ env.REGION }} \
            --schedule="0 2 * * *" \
            --uri="$COORDINATOR_URL" \
            --http-method=POST \
            --headers="Content-Type=application/json" \
            --message-body='{"trigger":"scheduled","timestamp":"'$(date -u +%s)'"}' \
            --time-zone="UTC" \
            --max-retry-attempts=3 \
            --min-backoff-duration=30s \
            --max-backoff-duration=300s \
            --oidc-service-account-email=${{ env.SERVICE_ACCOUNT }} || echo "ℹ️ Scheduler job already exists"

  verify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-coordinator, deploy-worker, setup-pubsub]
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Verify Deployment
        run: |
          echo "🔍 Verifying deployment..."
          
          # Check coordinator service
          COORDINATOR_STATUS=$(gcloud run services describe gmail-coordinator --region=${{ env.REGION }} --format='value(status.conditions[0].status)')
          echo "📋 Coordinator status: $COORDINATOR_STATUS"
          
          # Check worker service  
          WORKER_STATUS=$(gcloud run services describe gmail-worker --region=${{ env.REGION }} --format='value(status.conditions[0].status)')
          echo "🔧 Worker status: $WORKER_STATUS"
          
          # Check Pub/Sub setup
          gcloud pubsub topics describe ${{ secrets.GCP_PUB_SUB_GMAIL_WATCH_RENEWAL_TOPIC_ID }} --project=${{ env.PROJECT_ID }} > /dev/null
          echo "📡 Pub/Sub topic: ✅"
          
          gcloud pubsub subscriptions describe gmail-renewal-subscription --project=${{ env.PROJECT_ID }} > /dev/null
          echo "🔗 Pub/Sub subscription: ✅"
          
          echo ""
          echo "🎉 Deployment Summary:"
          echo "├── Coordinator: $(gcloud run services describe gmail-coordinator --region=${{ env.REGION }} --format='value(status.url)')"
          echo "├── Worker: $(gcloud run services describe gmail-worker --region=${{ env.REGION }} --format='value(status.url)')"
          echo "├── Topic: ${{ secrets.GCP_PUB_SUB_GMAIL_WATCH_RENEWAL_TOPIC_ID }}"
          echo "└── Region: ${{ env.REGION }}"